# ha REPL rcfile
# shopt -s histappend
# shopt -s checkwinsize
# shopt -s progcomp 2>/dev/null || true

# History configuration
HISTFILE=/tmp/.cli_history
HISTSIZE=1000
HISTFILESIZE=2000
PROMPT_COMMAND='history -a; history -c; history -r'

# Prompt
PS1='\[\e[32m\]ha > \[\e[0m\]'

# Friendly helpers
help() { 
    echo 'Note: Use "login" to enter operating system shell'
    echo ''
    echo '--------------------------------'
    ha help
}
login() { 
    echo 'Entering OS shell...'
    exit 10; 
    }

# Load ha completion if available
if command -v ha >/dev/null 2>&1; then
  if [ -f /etc/bash_completion.d/ha ]; then
    # Load from standard location
    . /etc/bash_completion.d/ha
    # Treat 'ha' as implied for completion: wrap to inject 'ha' at position 0
    # Use the reference-generated function name __start_ha when available
    if declare -F __start_ha >/dev/null 2>&1; then
      __start_ha_implicit() {
        local __save_words __save_cword
        __save_words=("${COMP_WORDS[@]}")
        __save_cword=${COMP_CWORD}
        COMP_WORDS=(ha "${COMP_WORDS[@]}")
        ((COMP_CWORD++))
        __start_ha
        COMP_WORDS=("${__save_words[@]}")
        COMP_CWORD=${__save_cword}
      }
      # Use default completion for unknown commands so bare subcommands complete
      if [[ $(type -t compopt) = builtin ]]; then
        complete -D -o default -F __start_ha_implicit
      else
        complete -D -o default -o nospace -F __start_ha_implicit
      fi
    fi

  fi
else
  echo 'Warning: ha command not found; commands will fail' >&2
fi

# Route unknown commands to ha (supports shorthand like: core info)
command_not_found_handle() {
  if command -v ha >/dev/null 2>&1; then
    ha "$@"
    return $?
  fi
  echo "bash: $1: command not found" >&2
  return 127
}

echo 'Tip: You can omit the leading "ha". For example: core info'